parameters:
  - name: taskVersion
    displayName: 'Task Version'
    type: string
    default: $(Task.Extension.Version)

trigger: none
pr: none
pool:
  vmImage: ubuntu-latest

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
  isTemp: $[or(startsWith(variables['Build.SourceBranch'], 'refs/heads/feature')), startsWith(variables['Build.SourceBranch'], 'refs/heads/bugfix')))]
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  marketplaceServiceConnection: 'marketplace-joachim-dalen'

stages:
  - stage: 'run_tests'
    displayName: Test & Build
    jobs:
      - job:
        steps:
          - template: ci/install.template.yml
          - template: ci/run-tests.template.yml

  - stage: verify_changelog
    dependsOn: 'run_tests'
    displayName: 'Check changelog'
    jobs:
      - job:
        steps:
          - task: Bash@3
            displayName: 'Check'

  - stage: package_dev
    displayName: '[DEV] Package extension'
    dependsOn: 'run_tests'
    condition: and(succeeded(), eq(variables.isTemp, true))
    variables:
      - group: 'mp-auto-state-dev'
    jobs:
      - template: ci/build-extension-artifact.yml
        parameters:
          env: dev
          taskVersion: ${{ parameters.taskVersion }}

  - stage: publish_dev
    displayName: '[DEV] Publish extension'
    dependsOn: 'package_dev'
    condition: and(succeeded(), eq(variables.isTemp, true))
    variables:
      - group: 'mp-auto-state-dev'
    jobs:
      - template: ci/publish-extension.yml
        parameters:
          pipelineEnv: auto-state-dev-env
          extensionVisibility: private

  - stage: package_qa
    displayName: '[QA] Package extension'
    dependsOn: 'verify_changelog'
    condition: and(succeeded(), eq(variables.isDevelop, true))
    variables:
      - group: 'mp-auto-state-qa'
    jobs:
      - template: ci/build-extension-artifact.yml
        parameters:
          env: qa
          taskVersion: ${{ parameters.taskVersion }}

  - stage: publish_qa
    displayName: '[QA] Publish extension'
    dependsOn: 'package_qa'
    condition: and(succeeded(), eq(variables.isDevelop, true))
    variables:
      - group: 'mp-auto-state-qa'
    jobs:
      - template: ci/publish-extension.yml
        parameters:
          pipelineEnv: auto-state-qa-env
          extensionVisibility: private

  - stage: package_prod
    displayName: '[PROD] Package extension'
    dependsOn: 'verify_changelog'
    condition: and(succeeded(), eq(variables.isMaster, true))
    variables:
      - group: 'mp-auto-state-prod'
    jobs:
      - template: ci/build-extension-artifact.yml
        parameters:
          env: prod
          taskVersion: ${{ parameters.taskVersion }}

  - stage: publish_prod
    displayName: '[PROD] Publish extension'
    dependsOn: 'package_prod'
    condition: and(succeeded(), eq(variables.isMaster, true))
    variables:
      - group: 'mp-auto-state-prod'
    jobs:
      - template: ci/publish-extension.yml
        parameters:
          pipelineEnv: auto-state-prod-env
          extensionVisibility: public_preview
